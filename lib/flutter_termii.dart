library flutter_termii;

import 'dart:convert';
import 'package:flutter_termii/src/network_helper.dart';

class Termii {
  final String url;
  final String apiKey;
  final String senderId;

  Termii({
    required this.url,
    required this.apiKey,
    required this.senderId,
  });

  Future<dynamic> sendSms({
    required String destination,
    required String message,
    String channel = 'generic',
  }) async {
    final response = await NetworkHelper.postRequest(
      url: "$url/api/sms/send",
      headers: <String, String>{
        'Content-Type': 'application/json; charset=UTF-8',
      },
      body: jsonEncode(<String, dynamic>{
        'to': destination,
        'from': senderId,
        'sms': message,
        'type': 'plain',
        'channel': channel,
        'api_key': apiKey,
      }),
    );
    return response.body;
  }

  Future<dynamic> sendMediaSms({
    required String destination,
    required String mediaUrl,
    String channel = 'generic',
    String? mediaCaption,
  }) async {
    final response = await NetworkHelper.postRequest(
      url: "$url/api/sms/send",
      headers: <String, String>{
        'Content-Type': 'application/json; charset=UTF-8',
      },
      body: jsonEncode(<String, dynamic>{
        'to': destination,
        'from': senderId,
        'type': 'plain',
        'channel': channel,
        'api_key': apiKey,
        'media': {
          'url': mediaUrl,
          'caption': mediaCaption,
        }
      }),
    );
    return response.body;
  }

  Future<dynamic> sendBulkSms({
    required List<String> multipleDestinations,
    required String message,
    String channel = 'generic',
  }) async {
    final response = await NetworkHelper.postRequest(
      url: "$url/api/sms/send/bulk",
      headers: <String, String>{
        'Content-Type': 'application/json; charset=UTF-8',
      },
      body: jsonEncode(<String, dynamic>{
        'to': multipleDestinations,
        'from': senderId,
        'sms': message,
        'type': 'plain',
        'channel': channel,
        'api_key': apiKey,
      }),
    );
    return response.body;
  }

  Future<dynamic> sendSmsWithAutoGeneratedNumber({
    required String destination,
    required String message,
  }) async {
    final response = await NetworkHelper.postRequest(
      url: "$url/api/sms/number/send",
      headers: <String, String>{
        'Content-Type': 'application/json; charset=UTF-8',
      },
      body: jsonEncode(<String, dynamic>{
        'to': destination,
        'sms': message,
        'api_key': apiKey,
      }),
    );
    return response.body;
  }

  Future<dynamic> sendToken({
    required String destination,
    required MessageType messageType,
    String channel = 'generic',
    required int pinAttempts,
    required int pinExpiryTime,
    required int pinLength,
    required String pinPlaceholder,
    required String messageText,
    required MessageType pinType,
  }) async {
    final response = await NetworkHelper.postRequest(
      url: "$url/api/sms/otp/send",
      headers: <String, String>{
        'Content-Type': 'application/json; charset=UTF-8',
      },
      body: jsonEncode(<String, dynamic>{
        'api_key': apiKey,
        'message_type':
            messageType == MessageType.numeric ? 'NUMERIC' : 'ALPHANUMERIC',
        'to': destination,
        'from': senderId,
        'channel': channel,
        'pin_attempts': pinAttempts,
        'pin_time_to_live': pinExpiryTime,
        'pin_length': pinLength,
        'pin_placeholder': pinPlaceholder,
        'message_text': messageText,
        'pin_type': pinType == MessageType.numeric ? 'NUMERIC' : 'ALPHANUMERIC',
      }),
    );
    return response.body;
  }

  Future<dynamic> sendVoiceToken({
    required String destination,
    required int pinAttempts,
    required int pinExpiryTime,
    required int pinLength,
  }) async {
    final response = await NetworkHelper.postRequest(
      url: "$url/api/sms/otp/send/voice",
      headers: <String, String>{
        'Content-Type': 'application/json; charset=UTF-8',
      },
      body: jsonEncode(<String, dynamic>{
        'api_key': apiKey,
        'phone_number': destination,
        'pin_attempts': pinAttempts,
        'pin_time_to_live': pinExpiryTime,
        'pin_length': pinLength,
      }),
    );
    return response.body;
  }

  Future<dynamic> sendVoiceCall({
    required String destination,
    required int code,
  }) async {
    final response = await NetworkHelper.postRequest(
      url: "$url/api/sms/otp/call",
      headers: <String, String>{
        'Content-Type': 'application/json; charset=UTF-8',
      },
      body: jsonEncode(<String, dynamic>{
        'api_key': apiKey,
        'phone_number': destination,
        'code': code,
      }),
    );
    return response.body;
  }

  Future<dynamic> generateInAppToken({
    required String destination,
    required int pinAttempts,
    required int pinExpiryTime,
    required int pinLength,
    required MessageType pinType,
  }) async {
    final response = await NetworkHelper.postRequest(
      url: "$url/api/sms/otp/generate",
      headers: <String, String>{
        'Content-Type': 'application/json; charset=UTF-8',
      },
      body: jsonEncode(<String, dynamic>{
        'api_key': apiKey,
        'phone_number': destination,
        'pin_attempts': pinAttempts,
        'pin_time_to_live': pinExpiryTime,
        'pin_length': pinLength,
        'pin_type': pinType == MessageType.numeric ? 'NUMERIC' : 'ALPHANUMERIC',
      }),
    );
    return response.body;
  }

  Future<dynamic> verifyToken({
    required String pinId,
    required String pin,
  }) async {
    final response = await NetworkHelper.postRequest(
      url: "$url/api/sms/otp/verify",
      headers: <String, String>{
        'Content-Type': 'application/json; charset=UTF-8',
      },
      body: jsonEncode(<String, dynamic>{
        'api_key': apiKey,
        'pin_id': pinId,
        'pin': pin,
      }),
    );
    return response.body;
  }

  Future<dynamic> veiwBalance({
    required String pinId,
    required String pin,
  }) async {
    final response = await NetworkHelper.getRequest(
      url: "$url/api/get-balance?api_key=$apiKey",
      headers: <String, String>{
        'Content-Type': 'application/json; charset=UTF-8',
      },
    );
    return response;
  }

  Future<dynamic> searchPhoneNumber({
    required String phoneNumber,
  }) async {
    final response = await NetworkHelper.getRequest(
      url: "$url/api/check/dnd?api_key=$apiKey&phone_number=$phoneNumber",
      headers: <String, String>{
        'Content-Type': 'application/json; charset=UTF-8',
      },
    );
    return response;
  }

  Future<dynamic> detectPhoneNumberStatus({
    required String phoneNumber,
    required String countryCode,
  }) async {
    final response = await NetworkHelper.getRequest(
      url:
          "$url/api/insight/number/query?phone_number=$phoneNumber&api_key=$apiKey&country_code=$countryCode",
      headers: <String, String>{
        'Content-Type': 'application/json; charset=UTF-8',
      },
    );
    return response;
  }
}

enum MessageType { numeric, alphanumeric }
